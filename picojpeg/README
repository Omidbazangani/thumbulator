
I have had some luck using open source software to test processors.  In
this case the picojpeg project actually did help me find a couple of
things with thumbulator.

The llvm toolchain uses mov lr,pc which on the surface is a bad thing
if you want to use that lr as a return address for example because
the program counter does not have the lsbit set, but the link register
should contain the lsbit set if the return address is a thumb address.

Now the llvm tools also generated a push with lr and pop with pc.  This
also looks bad on initial inspection, but the ARM ARM says that for
armv4T the pop {pc} is like a mov pc,value which means the address does
not need the lsbit set, but must be an address to thumb code for armv5t
and newer the pop {pc} is instead like  a bx address, which needs the
lsbit set but is more flexible.  So thumbulator warns if it sees a
pop {pc} with the lsbit not set but keeps going.

Likewise gcc had a situation where the program counter was a destination
without the lsbit being set.  This is okay as the pc doesnt need to
have the lsbit set.  I have a few places where I trap for this waiting
for a compiler to generate those instructions.  I removed the trap and
the program worked fine.

At the moment the llvm optimized build does not work with thumbulator
I believe this is a thumbulator problem as it compiles and runs on
real ARM hardware but so far not an apples to apples comparison.  I am
using llvm 3.3 (seem my build_gcc repo, the build_clang script).
